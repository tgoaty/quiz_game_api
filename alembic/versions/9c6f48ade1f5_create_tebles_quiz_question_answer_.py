"""create tebles: quiz, question, answer_option

Revision ID: 9c6f48ade1f5
Revises:
Create Date: 2025-07-22 21:37:33.030633

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "9c6f48ade1f5"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS quizzes")

    op.create_table(
        "quiz",
        sa.Column("title", sa.String(), nullable=False, comment="Quiz title"),
        sa.Column(
            "description", sa.String(), nullable=True, comment="quiz description"
        ),
        sa.Column("sid", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("sid"),
        sa.UniqueConstraint("sid"),
        schema="quizzes",
        comment="Table with all quizzes",
    )
    op.create_table(
        "question",
        sa.Column("text", sa.String(), nullable=False, comment="Question text"),
        sa.Column(
            "order_num", sa.Integer(), nullable=False, comment="Question order position"
        ),
        sa.Column("quiz_sid", sa.UUID(), nullable=False, comment="Quiz ID"),
        sa.Column("sid", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["quiz_sid"], ["quizzes.quiz.sid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("sid"),
        sa.UniqueConstraint("sid"),
        schema="quizzes",
        comment="Table with all questions",
    )
    op.create_table(
        "answer_option",
        sa.Column("text", sa.String(), nullable=False, comment="Answer option text"),
        sa.Column(
            "is_correct", sa.Boolean(), nullable=False, comment="Right answer or no"
        ),
        sa.Column("question_sid", sa.UUID(), nullable=False, comment="Question ID"),
        sa.Column("sid", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["question_sid"], ["quizzes.question.sid"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("sid"),
        sa.UniqueConstraint("sid"),
        schema="quizzes",
        comment="Table with all answer options",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("answer_option", schema="quizzes")
    op.drop_table("question", schema="quizzes")
    op.drop_table("quiz", schema="quizzes")

    op.execute("DROP SCHEMA IF EXISTS quizzes CASCADE")
    # ### end Alembic commands ###
